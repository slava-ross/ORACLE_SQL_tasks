1. Всех клиентов-мужчин с уровнем дохода "D", у которых не заполнено поле "семейное положение" и которые проживают в США
 или Германии.

select *
 from CUSTOMERS2
 where
  CUST_GENDER = 'M' and
  CUST_INCOME_LEVEL like 'D:%' and
  CUST_MARITAL_STATUS is null and
  (COUNTRY_ID = 'US' or COUNTRY_ID = 'DE')
;

2. Среднюю сумму покупки в каждой стране (при условии что покупатели покупают товары только в своей стране).
 Отсортировать в порядке убывания средней суммы.

select CUSTOMERS2.COUNTRY_ID, AVG(SALES2.AMOUNT_SOLD)
  from CUSTOMERS2
  left join SALES2
    on CUSTOMERS2.CUST_ID = SALES2.CUST_ID
  group by CUSTOMERS2.COUNTRY_ID
  order by AVG(SALES2.AMOUNT_SOLD) desc
;

3. "Популярность" почтовых доменов клиентов, т.е. количество клиентов с почтой в каждом из доменов.

select
    substr(CUST_EMAIL, instr(CUST_EMAIL,'@')),
    COUNT(*)
  from CUSTOMERS2
  group by substr(CUST_EMAIL, instr(CUST_EMAIL,'@'))
  order by count(*) desc
;

4. Имя и фамилию самых бедных клиентов - среди замужних женщин, не проживающих ни в Японии, ни в Бразилии,
 ни в Италии. Богатство определяется по кредитному лимиту.

select CUST_FIRST_NAME, CUST_LAST_NAME
  from CUSTOMERS2
  where
    CUST_CREDIT_LIMIT = (
      select MIN(CUST_CREDIT_LIMIT)
        from CUSTOMERS2
    ) and
    CUST_GENDER = 'F' and
    CUST_MARITAL_STATUS = 'married' and
    COUNTRY_ID NOT IN ('JP','BR','IT')
; 
 
5. Клиента с самым длинным домашним адресом, чей телефонный номер заканчивается на 3. Вывести результат в одном столбце,
 в формате “Name: [cust_first_name] [cust_last_name]; city: [cust_city]; address: [cust_street_address];
 number:[cust_main_phone_number]; email: [cust_email]; ”. (всё, что обернуто в [] – названия полей (столбцов) таблицы)

5.1 Вариант c concat():

select CUST_INFO
  from (
    select
      concat(
          concat(
              concat(
                concat('Name: ', CUST_FIRST_NAME),
                concat(' ', CUST_LAST_NAME)
              ),      
              concat(
                concat('; city: ', CUST_CITY),
                concat('; address: ', CUST_STREET_ADDRESS)
              )
          ),
          concat(
              concat(
                concat('; number: ', CUST_MAIN_PHONE_NUMBER),
                concat('; email: ', CUST_EMAIL)
              ),
              ';'
          )
      ) CUST_INFO,
      length(
          concat (
            concat (
              concat (
                concat (CUST_STREET_ADDRESS, ' '),
                concat (CUST_POSTAL_CODE, ' ')
              ),
              concat (
                concat (CUST_CITY, ' '),
                concat (CUST_STATE_PROVINCE, ' ')
              )
            ),
            COUNTRY_ID
          )
      ) LEN_VALS
      from CUSTOMERS2
      where CUST_MAIN_PHONE_NUMBER like '%3'
      order by LEN_VALS desc
  )
  where ROWNUM = 1
;

5.2 Вариант c оператором конкатенации строк:

select CUST_INFO
  from (
    select
      ('Name: ' ||
       CUST_FIRST_NAME ||
       ' ' ||
       CUST_LAST_NAME ||
       '; city: ' ||
       CUST_CITY ||
       '; address: ' ||
       CUST_STREET_ADDRESS ||
       '; number: ' ||
       CUST_MAIN_PHONE_NUMBER ||
       '; email: ' ||
       CUST_EMAIL ) CUST_INFO,
      length( CUST_STREET_ADDRESS ||
              ' ' ||
              CUST_POSTAL_CODE ||
              ' ' ||
              CUST_CITY ||
              ' ' ||
              CUST_STATE_PROVINCE ||
              ' ' ||
              COUNTRY_ID ) LEN_VALS
    from CUSTOMERS2
    where CUST_MAIN_PHONE_NUMBER like '%3'
    order by LEN_VALS desc
  )
  where ROWNUM = 1
;

6. Максимальное количество покупок за день для каждого продукта, отсортированных по убыванию количества
 (Столбцы должны быть такими: "Макс покуп/день", prod_name)

select DISTR.MAX_SUMMA Max_purchases_per_day, PROD.PROD_NAME Product_Name /*, DISTR.PROD_ID {for debugging}*/
    from 
        (select PROD_ID, max(PROD_CNT) MAX_SUMMA
            from(
                select PROD_ID, TIME_ID, count(*) PROD_CNT
                    from SALES2
                    /* where rownum < 5000 {for debugging}*/
                    group by (PROD_ID, TIME_ID)
                )
            group by PROD_ID
        ) DISTR
    left join PRODUCTS2 PROD
    on PROD.PROD_ID = DISTR.PROD_ID
    order by DISTR.MAX_SUMMA desc
;

7. Процентное соотношение мужчин и женщин, проживающих в каждой стране, отсортированное по названию страны в
 алфавитном порядке. Столбцы в выводе должны быть такими: «Страна», «% мужчин», «%женщин».

select  MAL.COUNTRY_ID Country,
        round( NVL(M_CNT,0)/TOTAL.CNT_TOTAL*100,2 ) Male_Procent,
        round( NVL(F_CNT,0)/TOTAL.CNT_TOTAL*100, 2 ) Female_Procent
    from (
        select COUNTRY_ID, count(*) M_CNT
            from CUSTOMERS2
            where CUST_GENDER = 'M'
            group by COUNTRY_ID
        ) MAL
    left join (
        select COUNTRY_ID, count(*) F_CNT
            from CUSTOMERS2
            where CUST_GENDER = 'F'
            group by COUNTRY_ID
        ) FEM
    on MAL.COUNTRY_ID = FEM.COUNTRY_ID
    join (
        select COUNTRY_ID, count(*) CNT_TOTAL
            from CUSTOMERS2
            group by COUNTRY_ID
        ) TOTAL
    on TOTAL.COUNTRY_ID = MAL.COUNTRY_ID
; 

8. Всех клиентов, которые купили самый дешевый продукт в категории Мужские джинсы (Jeans - Men) или самый дешевый
 продукт в категории женские платья (Dresses - Women) (связка таблиц CUSTOMERS2 -> SALES2 -> PRODUCTS2), среди тех,
 кто родился позже 1970 года;

select
    /*C.CUST_ID
    S.PROD_ID,*/
    C.CUST_FIRST_NAME,
    C.CUST_LAST_NAME,
    C.CUST_YEAR_OF_BIRTH/*,
    P.PROD_NAME,
    P.PROD_SUBCATEGORY,
    P.PROD_LIST_PRICE*/
    from SALES2 S
    join CUSTOMERS2 C
        on S.CUST_ID = C.CUST_ID
    join (
        select *
            from PRODUCTS2 
            where 
                PROD_SUBCATEGORY = 'Jeans - Men' and 
                PROD_LIST_PRICE = (
                    select min(PROD_LIST_PRICE)
                        from PRODUCTS2
                        where PROD_SUBCATEGORY = 'Jeans - Men'
                        group by PROD_SUBCATEGORY
                )                                   
        union
        select *
            from PRODUCTS2 
            where 
                PROD_SUBCATEGORY = 'Dresses - Women' and 
                PROD_LIST_PRICE = (
                    select min(PROD_LIST_PRICE)
                        from PRODUCTS2
                        where PROD_SUBCATEGORY = 'Dresses - Women'
                        group by PROD_SUBCATEGORY
                )                                    

    ) P
        on S.PROD_ID = P.PROD_ID
    where
        C.CUST_YEAR_OF_BIRTH > 1970
;

9. распределение общего количества покупок категории "Верхняя одежда для мужчин" ('Outerwear - Men') по странам
 (т.е. распределение по странам, в которых проживают клиенты), в конечной выборке оставить те страны, в которых
 общее количество покупок выше, чем среднее количество покупок в стране (по всему миру).

with
    GENERAL_DISTR as (
        select C.COUNTRY_ID CID, COUNT(*) CNT_PER_COUNTRY
            from SALES2 S
            join
                CUSTOMERS2 C
            on S.CUST_ID = C.CUST_ID
            group by C.COUNTRY_ID
    )
select C.COUNTRY_ID, COUNT(*) PROD_CNT 
    from SALES2 S
    join
        CUSTOMERS2 C
    on S.CUST_ID = C.CUST_ID
    join 
        PRODUCTS2 P
    on S.PROD_ID = P.PROD_ID
    where P.PROD_SUBCATEGORY = 'Outerwear - Men'
    group by C.COUNTRY_ID
    having C.COUNTRY_ID in (
        select CID 
        from GENERAL_DISTR 
        where CNT_PER_COUNTRY > (select AVG(CNT_PER_COUNTRY) from GENERAL_DISTR)
    )
    order by PROD_CNT desc
;
